#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Webapi_Authorized.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Goods")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertCommentInfo(CommentInfo instance);
    partial void UpdateCommentInfo(CommentInfo instance);
    partial void DeleteCommentInfo(CommentInfo instance);
    partial void InsertUserInfo(UserInfo instance);
    partial void UpdateUserInfo(UserInfo instance);
    partial void DeleteUserInfo(UserInfo instance);
    partial void InsertGoodsInfo(GoodsInfo instance);
    partial void UpdateGoodsInfo(GoodsInfo instance);
    partial void DeleteGoodsInfo(GoodsInfo instance);
    partial void InsertGoodsType(GoodsType instance);
    partial void UpdateGoodsType(GoodsType instance);
    partial void DeleteGoodsType(GoodsType instance);
    partial void InsertSellInfo(SellInfo instance);
    partial void UpdateSellInfo(SellInfo instance);
    partial void DeleteSellInfo(SellInfo instance);
    partial void InsertTokenInfo(TokenInfo instance);
    partial void UpdateTokenInfo(TokenInfo instance);
    partial void DeleteTokenInfo(TokenInfo instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["GoodsConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CommentInfo> CommentInfo
		{
			get
			{
				return this.GetTable<CommentInfo>();
			}
		}
		
		public System.Data.Linq.Table<UserInfo> UserInfo
		{
			get
			{
				return this.GetTable<UserInfo>();
			}
		}
		
		public System.Data.Linq.Table<GoodsInfo> GoodsInfo
		{
			get
			{
				return this.GetTable<GoodsInfo>();
			}
		}
		
		public System.Data.Linq.Table<GoodsType> GoodsType
		{
			get
			{
				return this.GetTable<GoodsType>();
			}
		}
		
		public System.Data.Linq.Table<SellInfo> SellInfo
		{
			get
			{
				return this.GetTable<SellInfo>();
			}
		}
		
		public System.Data.Linq.Table<TokenInfo> TokenInfo
		{
			get
			{
				return this.GetTable<TokenInfo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommentInfo")]
	public partial class CommentInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Comment_id;
		
		private int _Conmment_Goodsid;
		
		private string _Comment_Content;
		
		private int _Comment_Uid;
		
		private string _Comment_Time;
		
		private EntityRef<UserInfo> _UserInfo;
		
		private EntityRef<GoodsInfo> _GoodsInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnComment_idChanging(int value);
    partial void OnComment_idChanged();
    partial void OnConmment_GoodsidChanging(int value);
    partial void OnConmment_GoodsidChanged();
    partial void OnComment_ContentChanging(string value);
    partial void OnComment_ContentChanged();
    partial void OnComment_UidChanging(int value);
    partial void OnComment_UidChanged();
    partial void OnComment_TimeChanging(string value);
    partial void OnComment_TimeChanged();
    #endregion
		
		public CommentInfo()
		{
			this._UserInfo = default(EntityRef<UserInfo>);
			this._GoodsInfo = default(EntityRef<GoodsInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Comment_id
		{
			get
			{
				return this._Comment_id;
			}
			set
			{
				if ((this._Comment_id != value))
				{
					this.OnComment_idChanging(value);
					this.SendPropertyChanging();
					this._Comment_id = value;
					this.SendPropertyChanged("Comment_id");
					this.OnComment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Conmment_Goodsid", DbType="Int NOT NULL")]
		public int Conmment_Goodsid
		{
			get
			{
				return this._Conmment_Goodsid;
			}
			set
			{
				if ((this._Conmment_Goodsid != value))
				{
					if (this._GoodsInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConmment_GoodsidChanging(value);
					this.SendPropertyChanging();
					this._Conmment_Goodsid = value;
					this.SendPropertyChanged("Conmment_Goodsid");
					this.OnConmment_GoodsidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment_Content", DbType="NVarChar(MAX)")]
		public string Comment_Content
		{
			get
			{
				return this._Comment_Content;
			}
			set
			{
				if ((this._Comment_Content != value))
				{
					this.OnComment_ContentChanging(value);
					this.SendPropertyChanging();
					this._Comment_Content = value;
					this.SendPropertyChanged("Comment_Content");
					this.OnComment_ContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment_Uid", DbType="Int NOT NULL")]
		public int Comment_Uid
		{
			get
			{
				return this._Comment_Uid;
			}
			set
			{
				if ((this._Comment_Uid != value))
				{
					if (this._UserInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnComment_UidChanging(value);
					this.SendPropertyChanging();
					this._Comment_Uid = value;
					this.SendPropertyChanged("Comment_Uid");
					this.OnComment_UidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment_Time", DbType="NVarChar(50)")]
		public string Comment_Time
		{
			get
			{
				return this._Comment_Time;
			}
			set
			{
				if ((this._Comment_Time != value))
				{
					this.OnComment_TimeChanging(value);
					this.SendPropertyChanging();
					this._Comment_Time = value;
					this.SendPropertyChanged("Comment_Time");
					this.OnComment_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserInfo_CommentInfo", Storage="_UserInfo", ThisKey="Comment_Uid", OtherKey="User_id", IsForeignKey=true)]
		public UserInfo UserInfo
		{
			get
			{
				return this._UserInfo.Entity;
			}
			set
			{
				UserInfo previousValue = this._UserInfo.Entity;
				if (((previousValue != value) 
							|| (this._UserInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserInfo.Entity = null;
						previousValue.CommentInfo.Remove(this);
					}
					this._UserInfo.Entity = value;
					if ((value != null))
					{
						value.CommentInfo.Add(this);
						this._Comment_Uid = value.User_id;
					}
					else
					{
						this._Comment_Uid = default(int);
					}
					this.SendPropertyChanged("UserInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GoodsInfo_CommentInfo", Storage="_GoodsInfo", ThisKey="Conmment_Goodsid", OtherKey="Goods_id", IsForeignKey=true)]
		public GoodsInfo GoodsInfo
		{
			get
			{
				return this._GoodsInfo.Entity;
			}
			set
			{
				GoodsInfo previousValue = this._GoodsInfo.Entity;
				if (((previousValue != value) 
							|| (this._GoodsInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GoodsInfo.Entity = null;
						previousValue.CommentInfo.Remove(this);
					}
					this._GoodsInfo.Entity = value;
					if ((value != null))
					{
						value.CommentInfo.Add(this);
						this._Conmment_Goodsid = value.Goods_id;
					}
					else
					{
						this._Conmment_Goodsid = default(int);
					}
					this.SendPropertyChanged("GoodsInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserInfo")]
	public partial class UserInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_id;
		
		private string _User_Name;
		
		private string _User_Pwd;
		
		private string _User_Tel;
		
		private EntitySet<CommentInfo> _CommentInfo;
		
		private EntitySet<SellInfo> _SellInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_idChanging(int value);
    partial void OnUser_idChanged();
    partial void OnUser_NameChanging(string value);
    partial void OnUser_NameChanged();
    partial void OnUser_PwdChanging(string value);
    partial void OnUser_PwdChanged();
    partial void OnUser_TelChanging(string value);
    partial void OnUser_TelChanged();
    #endregion
		
		public UserInfo()
		{
			this._CommentInfo = new EntitySet<CommentInfo>(new Action<CommentInfo>(this.attach_CommentInfo), new Action<CommentInfo>(this.detach_CommentInfo));
			this._SellInfo = new EntitySet<SellInfo>(new Action<SellInfo>(this.attach_SellInfo), new Action<SellInfo>(this.detach_SellInfo));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int User_id
		{
			get
			{
				return this._User_id;
			}
			set
			{
				if ((this._User_id != value))
				{
					this.OnUser_idChanging(value);
					this.SendPropertyChanging();
					this._User_id = value;
					this.SendPropertyChanged("User_id");
					this.OnUser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Name", DbType="NVarChar(36)")]
		public string User_Name
		{
			get
			{
				return this._User_Name;
			}
			set
			{
				if ((this._User_Name != value))
				{
					this.OnUser_NameChanging(value);
					this.SendPropertyChanging();
					this._User_Name = value;
					this.SendPropertyChanged("User_Name");
					this.OnUser_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Pwd", DbType="NVarChar(36)")]
		public string User_Pwd
		{
			get
			{
				return this._User_Pwd;
			}
			set
			{
				if ((this._User_Pwd != value))
				{
					this.OnUser_PwdChanging(value);
					this.SendPropertyChanging();
					this._User_Pwd = value;
					this.SendPropertyChanged("User_Pwd");
					this.OnUser_PwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Tel", DbType="NVarChar(36)")]
		public string User_Tel
		{
			get
			{
				return this._User_Tel;
			}
			set
			{
				if ((this._User_Tel != value))
				{
					this.OnUser_TelChanging(value);
					this.SendPropertyChanging();
					this._User_Tel = value;
					this.SendPropertyChanged("User_Tel");
					this.OnUser_TelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserInfo_CommentInfo", Storage="_CommentInfo", ThisKey="User_id", OtherKey="Comment_Uid")]
		public EntitySet<CommentInfo> CommentInfo
		{
			get
			{
				return this._CommentInfo;
			}
			set
			{
				this._CommentInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserInfo_SellInfo", Storage="_SellInfo", ThisKey="User_id", OtherKey="Sell_UserId")]
		public EntitySet<SellInfo> SellInfo
		{
			get
			{
				return this._SellInfo;
			}
			set
			{
				this._SellInfo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CommentInfo(CommentInfo entity)
		{
			this.SendPropertyChanging();
			entity.UserInfo = this;
		}
		
		private void detach_CommentInfo(CommentInfo entity)
		{
			this.SendPropertyChanging();
			entity.UserInfo = null;
		}
		
		private void attach_SellInfo(SellInfo entity)
		{
			this.SendPropertyChanging();
			entity.UserInfo = this;
		}
		
		private void detach_SellInfo(SellInfo entity)
		{
			this.SendPropertyChanging();
			entity.UserInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GoodsInfo")]
	public partial class GoodsInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Goods_id;
		
		private string _Goods_Name;
		
		private System.Nullable<decimal> _Goods_Price;
		
		private string _Goods_Img;
		
		private string _Goods_Content;
		
		private System.Nullable<System.DateTime> _Goods_Time;
		
		private System.Nullable<int> _Goods_Type;
		
		private EntitySet<CommentInfo> _CommentInfo;
		
		private EntitySet<SellInfo> _SellInfo;
		
		private EntityRef<GoodsType> _GoodsType;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGoods_idChanging(int value);
    partial void OnGoods_idChanged();
    partial void OnGoods_NameChanging(string value);
    partial void OnGoods_NameChanged();
    partial void OnGoods_PriceChanging(System.Nullable<decimal> value);
    partial void OnGoods_PriceChanged();
    partial void OnGoods_ImgChanging(string value);
    partial void OnGoods_ImgChanged();
    partial void OnGoods_ContentChanging(string value);
    partial void OnGoods_ContentChanged();
    partial void OnGoods_TimeChanging(System.Nullable<System.DateTime> value);
    partial void OnGoods_TimeChanged();
    partial void OnGoods_TypeChanging(System.Nullable<int> value);
    partial void OnGoods_TypeChanged();
    #endregion
		
		public GoodsInfo()
		{
			this._CommentInfo = new EntitySet<CommentInfo>(new Action<CommentInfo>(this.attach_CommentInfo), new Action<CommentInfo>(this.detach_CommentInfo));
			this._SellInfo = new EntitySet<SellInfo>(new Action<SellInfo>(this.attach_SellInfo), new Action<SellInfo>(this.detach_SellInfo));
			this._GoodsType = default(EntityRef<GoodsType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Goods_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Goods_id
		{
			get
			{
				return this._Goods_id;
			}
			set
			{
				if ((this._Goods_id != value))
				{
					if (this._GoodsType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGoods_idChanging(value);
					this.SendPropertyChanging();
					this._Goods_id = value;
					this.SendPropertyChanged("Goods_id");
					this.OnGoods_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Goods_Name", DbType="NVarChar(36)")]
		public string Goods_Name
		{
			get
			{
				return this._Goods_Name;
			}
			set
			{
				if ((this._Goods_Name != value))
				{
					this.OnGoods_NameChanging(value);
					this.SendPropertyChanging();
					this._Goods_Name = value;
					this.SendPropertyChanged("Goods_Name");
					this.OnGoods_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Goods_Price", DbType="Money")]
		public System.Nullable<decimal> Goods_Price
		{
			get
			{
				return this._Goods_Price;
			}
			set
			{
				if ((this._Goods_Price != value))
				{
					this.OnGoods_PriceChanging(value);
					this.SendPropertyChanging();
					this._Goods_Price = value;
					this.SendPropertyChanged("Goods_Price");
					this.OnGoods_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Goods_Img", DbType="NVarChar(MAX)")]
		public string Goods_Img
		{
			get
			{
				return this._Goods_Img;
			}
			set
			{
				if ((this._Goods_Img != value))
				{
					this.OnGoods_ImgChanging(value);
					this.SendPropertyChanging();
					this._Goods_Img = value;
					this.SendPropertyChanged("Goods_Img");
					this.OnGoods_ImgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Goods_Content", DbType="NVarChar(MAX)")]
		public string Goods_Content
		{
			get
			{
				return this._Goods_Content;
			}
			set
			{
				if ((this._Goods_Content != value))
				{
					this.OnGoods_ContentChanging(value);
					this.SendPropertyChanging();
					this._Goods_Content = value;
					this.SendPropertyChanged("Goods_Content");
					this.OnGoods_ContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Goods_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Goods_Time
		{
			get
			{
				return this._Goods_Time;
			}
			set
			{
				if ((this._Goods_Time != value))
				{
					this.OnGoods_TimeChanging(value);
					this.SendPropertyChanging();
					this._Goods_Time = value;
					this.SendPropertyChanged("Goods_Time");
					this.OnGoods_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Goods_Type", DbType="Int")]
		public System.Nullable<int> Goods_Type
		{
			get
			{
				return this._Goods_Type;
			}
			set
			{
				if ((this._Goods_Type != value))
				{
					this.OnGoods_TypeChanging(value);
					this.SendPropertyChanging();
					this._Goods_Type = value;
					this.SendPropertyChanged("Goods_Type");
					this.OnGoods_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GoodsInfo_CommentInfo", Storage="_CommentInfo", ThisKey="Goods_id", OtherKey="Conmment_Goodsid")]
		public EntitySet<CommentInfo> CommentInfo
		{
			get
			{
				return this._CommentInfo;
			}
			set
			{
				this._CommentInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GoodsInfo_SellInfo", Storage="_SellInfo", ThisKey="Goods_id", OtherKey="Sell_Goodsld")]
		public EntitySet<SellInfo> SellInfo
		{
			get
			{
				return this._SellInfo;
			}
			set
			{
				this._SellInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GoodsType_GoodsInfo", Storage="_GoodsType", ThisKey="Goods_id", OtherKey="Type_id", IsForeignKey=true)]
		public GoodsType GoodsType
		{
			get
			{
				return this._GoodsType.Entity;
			}
			set
			{
				GoodsType previousValue = this._GoodsType.Entity;
				if (((previousValue != value) 
							|| (this._GoodsType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GoodsType.Entity = null;
						previousValue.GoodsInfo = null;
					}
					this._GoodsType.Entity = value;
					if ((value != null))
					{
						value.GoodsInfo = this;
						this._Goods_id = value.Type_id;
					}
					else
					{
						this._Goods_id = default(int);
					}
					this.SendPropertyChanged("GoodsType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CommentInfo(CommentInfo entity)
		{
			this.SendPropertyChanging();
			entity.GoodsInfo = this;
		}
		
		private void detach_CommentInfo(CommentInfo entity)
		{
			this.SendPropertyChanging();
			entity.GoodsInfo = null;
		}
		
		private void attach_SellInfo(SellInfo entity)
		{
			this.SendPropertyChanging();
			entity.GoodsInfo = this;
		}
		
		private void detach_SellInfo(SellInfo entity)
		{
			this.SendPropertyChanging();
			entity.GoodsInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GoodsType")]
	public partial class GoodsType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Type_id;
		
		private string _Type_Name;
		
		private string _Type_Content;
		
		private EntityRef<GoodsInfo> _GoodsInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnType_idChanging(int value);
    partial void OnType_idChanged();
    partial void OnType_NameChanging(string value);
    partial void OnType_NameChanged();
    partial void OnType_ContentChanging(string value);
    partial void OnType_ContentChanged();
    #endregion
		
		public GoodsType()
		{
			this._GoodsInfo = default(EntityRef<GoodsInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Type_id
		{
			get
			{
				return this._Type_id;
			}
			set
			{
				if ((this._Type_id != value))
				{
					this.OnType_idChanging(value);
					this.SendPropertyChanging();
					this._Type_id = value;
					this.SendPropertyChanged("Type_id");
					this.OnType_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type_Name", DbType="NVarChar(36)")]
		public string Type_Name
		{
			get
			{
				return this._Type_Name;
			}
			set
			{
				if ((this._Type_Name != value))
				{
					this.OnType_NameChanging(value);
					this.SendPropertyChanging();
					this._Type_Name = value;
					this.SendPropertyChanged("Type_Name");
					this.OnType_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type_Content", DbType="NVarChar(36)")]
		public string Type_Content
		{
			get
			{
				return this._Type_Content;
			}
			set
			{
				if ((this._Type_Content != value))
				{
					this.OnType_ContentChanging(value);
					this.SendPropertyChanging();
					this._Type_Content = value;
					this.SendPropertyChanged("Type_Content");
					this.OnType_ContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GoodsType_GoodsInfo", Storage="_GoodsInfo", ThisKey="Type_id", OtherKey="Goods_id", IsUnique=true, IsForeignKey=false)]
		public GoodsInfo GoodsInfo
		{
			get
			{
				return this._GoodsInfo.Entity;
			}
			set
			{
				GoodsInfo previousValue = this._GoodsInfo.Entity;
				if (((previousValue != value) 
							|| (this._GoodsInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GoodsInfo.Entity = null;
						previousValue.GoodsType = null;
					}
					this._GoodsInfo.Entity = value;
					if ((value != null))
					{
						value.GoodsType = this;
					}
					this.SendPropertyChanged("GoodsInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SellInfo")]
	public partial class SellInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Sell_id;
		
		private System.Nullable<int> _Sell_Goodsld;
		
		private string _Sell_GoodsName;
		
		private string _Sell_Count;
		
		private string _Sell_Price;
		
		private System.Nullable<System.DateTime> _Sell_GoodsTime;
		
		private System.Nullable<int> _Sell_UserId;
		
		private EntityRef<GoodsInfo> _GoodsInfo;
		
		private EntityRef<UserInfo> _UserInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSell_idChanging(int value);
    partial void OnSell_idChanged();
    partial void OnSell_GoodsldChanging(System.Nullable<int> value);
    partial void OnSell_GoodsldChanged();
    partial void OnSell_GoodsNameChanging(string value);
    partial void OnSell_GoodsNameChanged();
    partial void OnSell_CountChanging(string value);
    partial void OnSell_CountChanged();
    partial void OnSell_PriceChanging(string value);
    partial void OnSell_PriceChanged();
    partial void OnSell_GoodsTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSell_GoodsTimeChanged();
    partial void OnSell_UserIdChanging(System.Nullable<int> value);
    partial void OnSell_UserIdChanged();
    #endregion
		
		public SellInfo()
		{
			this._GoodsInfo = default(EntityRef<GoodsInfo>);
			this._UserInfo = default(EntityRef<UserInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sell_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Sell_id
		{
			get
			{
				return this._Sell_id;
			}
			set
			{
				if ((this._Sell_id != value))
				{
					this.OnSell_idChanging(value);
					this.SendPropertyChanging();
					this._Sell_id = value;
					this.SendPropertyChanged("Sell_id");
					this.OnSell_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sell_Goodsld", DbType="Int")]
		public System.Nullable<int> Sell_Goodsld
		{
			get
			{
				return this._Sell_Goodsld;
			}
			set
			{
				if ((this._Sell_Goodsld != value))
				{
					if (this._GoodsInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSell_GoodsldChanging(value);
					this.SendPropertyChanging();
					this._Sell_Goodsld = value;
					this.SendPropertyChanged("Sell_Goodsld");
					this.OnSell_GoodsldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sell_GoodsName", DbType="NVarChar(36)")]
		public string Sell_GoodsName
		{
			get
			{
				return this._Sell_GoodsName;
			}
			set
			{
				if ((this._Sell_GoodsName != value))
				{
					this.OnSell_GoodsNameChanging(value);
					this.SendPropertyChanging();
					this._Sell_GoodsName = value;
					this.SendPropertyChanged("Sell_GoodsName");
					this.OnSell_GoodsNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sell_Count", DbType="NVarChar(50)")]
		public string Sell_Count
		{
			get
			{
				return this._Sell_Count;
			}
			set
			{
				if ((this._Sell_Count != value))
				{
					this.OnSell_CountChanging(value);
					this.SendPropertyChanging();
					this._Sell_Count = value;
					this.SendPropertyChanged("Sell_Count");
					this.OnSell_CountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sell_Price", DbType="NVarChar(50)")]
		public string Sell_Price
		{
			get
			{
				return this._Sell_Price;
			}
			set
			{
				if ((this._Sell_Price != value))
				{
					this.OnSell_PriceChanging(value);
					this.SendPropertyChanging();
					this._Sell_Price = value;
					this.SendPropertyChanged("Sell_Price");
					this.OnSell_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sell_GoodsTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Sell_GoodsTime
		{
			get
			{
				return this._Sell_GoodsTime;
			}
			set
			{
				if ((this._Sell_GoodsTime != value))
				{
					this.OnSell_GoodsTimeChanging(value);
					this.SendPropertyChanging();
					this._Sell_GoodsTime = value;
					this.SendPropertyChanged("Sell_GoodsTime");
					this.OnSell_GoodsTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sell_UserId", DbType="Int")]
		public System.Nullable<int> Sell_UserId
		{
			get
			{
				return this._Sell_UserId;
			}
			set
			{
				if ((this._Sell_UserId != value))
				{
					if (this._UserInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSell_UserIdChanging(value);
					this.SendPropertyChanging();
					this._Sell_UserId = value;
					this.SendPropertyChanged("Sell_UserId");
					this.OnSell_UserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GoodsInfo_SellInfo", Storage="_GoodsInfo", ThisKey="Sell_Goodsld", OtherKey="Goods_id", IsForeignKey=true)]
		public GoodsInfo GoodsInfo
		{
			get
			{
				return this._GoodsInfo.Entity;
			}
			set
			{
				GoodsInfo previousValue = this._GoodsInfo.Entity;
				if (((previousValue != value) 
							|| (this._GoodsInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GoodsInfo.Entity = null;
						previousValue.SellInfo.Remove(this);
					}
					this._GoodsInfo.Entity = value;
					if ((value != null))
					{
						value.SellInfo.Add(this);
						this._Sell_Goodsld = value.Goods_id;
					}
					else
					{
						this._Sell_Goodsld = default(Nullable<int>);
					}
					this.SendPropertyChanged("GoodsInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserInfo_SellInfo", Storage="_UserInfo", ThisKey="Sell_UserId", OtherKey="User_id", IsForeignKey=true)]
		public UserInfo UserInfo
		{
			get
			{
				return this._UserInfo.Entity;
			}
			set
			{
				UserInfo previousValue = this._UserInfo.Entity;
				if (((previousValue != value) 
							|| (this._UserInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserInfo.Entity = null;
						previousValue.SellInfo.Remove(this);
					}
					this._UserInfo.Entity = value;
					if ((value != null))
					{
						value.SellInfo.Add(this);
						this._Sell_UserId = value.User_id;
					}
					else
					{
						this._Sell_UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TokenInfo")]
	public partial class TokenInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Tokenid;
		
		private string _Token;
		
		private int _Uid;
		
		private System.Nullable<System.DateTime> _ExpireData;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTokenidChanging(int value);
    partial void OnTokenidChanged();
    partial void OnTokenChanging(string value);
    partial void OnTokenChanged();
    partial void OnUidChanging(int value);
    partial void OnUidChanged();
    partial void OnExpireDataChanging(System.Nullable<System.DateTime> value);
    partial void OnExpireDataChanged();
    #endregion
		
		public TokenInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tokenid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Tokenid
		{
			get
			{
				return this._Tokenid;
			}
			set
			{
				if ((this._Tokenid != value))
				{
					this.OnTokenidChanging(value);
					this.SendPropertyChanging();
					this._Tokenid = value;
					this.SendPropertyChanged("Tokenid");
					this.OnTokenidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="NVarChar(36)")]
		public string Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this.OnTokenChanging(value);
					this.SendPropertyChanging();
					this._Token = value;
					this.SendPropertyChanged("Token");
					this.OnTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uid", DbType="Int NOT NULL")]
		public int Uid
		{
			get
			{
				return this._Uid;
			}
			set
			{
				if ((this._Uid != value))
				{
					this.OnUidChanging(value);
					this.SendPropertyChanging();
					this._Uid = value;
					this.SendPropertyChanged("Uid");
					this.OnUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpireData", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpireData
		{
			get
			{
				return this._ExpireData;
			}
			set
			{
				if ((this._ExpireData != value))
				{
					this.OnExpireDataChanging(value);
					this.SendPropertyChanging();
					this._ExpireData = value;
					this.SendPropertyChanged("ExpireData");
					this.OnExpireDataChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
